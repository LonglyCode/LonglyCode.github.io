<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial on 记忆和记忆的补完</title>
    <link>http://longlycode.github.io/tags/tutorial/</link>
    <description>Recent content in Tutorial on 记忆和记忆的补完</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>LonglyCode</copyright>
    <lastBuildDate>Sun, 28 Feb 2016 20:18:06 +0000</lastBuildDate>
    
	<atom:link href="http://longlycode.github.io/tags/tutorial/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>emacs完全补完计划（五）——歌剧魅影Elisp</title>
      <link>http://longlycode.github.io/post/emacs%E5%AE%8C%E5%85%A8%E8%A1%A5%E5%AE%8C%E8%AE%A1%E5%88%92%E4%BA%94/</link>
      <pubDate>Sun, 28 Feb 2016 20:18:06 +0000</pubDate>
      
      <guid>http://longlycode.github.io/post/emacs%E5%AE%8C%E5%85%A8%E8%A1%A5%E5%AE%8C%E8%AE%A1%E5%88%92%E4%BA%94/</guid>
      <description>&lt;!-- toc --&gt;

&lt;h2 id=&#34;闲话elisp&#34;&gt;闲话elisp&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;如果说emacs是一出庞大的歌剧，那么elisp则是撑起全场的主角，它犹如一道魅影，神秘、黑暗、引人入胜，在剧初以无以伦比的优雅身姿和独一无二的音色试图唤起观众的灵魂共鸣；当有人尝试接近它的时候，或许期望越大失望越大，藏在另一半面具下是人性特有的丑陋，是受世人侮辱唾弃后难掩的愤怒和敏感；而最后它高尚的选择和坚持让作为学习者的我们不断反思，什么叫做美？不是世俗的外在的可视的，是来源内在的人性之光，能够让灵魂起舞。事实上扯远了，不过大概总结了学习elisp的三个阶段，首先被洗脑认为lisp系语言如同武林传说中的秘籍邪典，迷迷糊糊建立了莫名的崇拜，后来深入学习才发现lisp系语言有固有的缺陷，致使它们在现代背景下难有立足之地，最后在完全了解它们了，发现在语言演变的历史长河它们是那么的独一无二，具有难以言表在时间的美，仿佛洞开了一个新世界。lisp相对现在很古老，在这期间有很多篇文章试图向别人灌输它的思想，这篇文章也是其中一篇，但lisp系语言太庞大，就elisp本身的官方手册都有一千多页，要在一篇文章里面完全展现它是不现实的，只能按笔者自己的有限理解来书写，可能夹杂着不恰当的比喻，希望观者有所悟。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Org-mode个人总结</title>
      <link>http://longlycode.github.io/post/org-mode%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/</link>
      <pubDate>Mon, 25 Jan 2016 22:48:14 +0000</pubDate>
      
      <guid>http://longlycode.github.io/post/org-mode%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;!-- toc --&gt;

&lt;blockquote&gt;
&lt;p&gt;这是一份个人总结，并不能带你入门，我也曾尝试些一个教程，但不自信比这个中文教程好：&lt;a href=&#34;http://www.cnblogs.com/Open_Source/archive/2011/07/17/2108747.html&#34;&gt;Org-mode 简明手册&lt;/a&gt;，翻译官方的 &lt;a href=&#34;http://orgmode.org/manual&#34;&gt;mini manual&lt;/a&gt;，有个最佳实践 &lt;a href=&#34;http://doc.norang.ca/org-mode.html&#34;&gt;organize your life plain text&lt;/a&gt;。Org 用来做 GTD 是极好的，它的绝对优势就是完全是纯文本的，所有的格式状态都是由一些符号和特殊字符组成，不依赖于任何的数据库，而且可自定义的东西太多，因为是纯文本的，许多格式定义可以都涉及到一些程序通用的表达式，对于程序猿是非常友好的，但对于普通人需要一定的学习成本。本文提炼了Org常用的功能和设置，作为备忘记录。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>