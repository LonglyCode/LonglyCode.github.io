<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ide on 记忆和记忆的补完</title>
    <link>http://LonglyCode.github.io/tags/ide/</link>
    <description>Recent content in Ide on 记忆和记忆的补完</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>LonglyCode</copyright>
    <lastBuildDate>Tue, 02 Feb 2016 23:30:39 +0000</lastBuildDate>
    
	<atom:link href="http://LonglyCode.github.io/tags/ide/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>emacs完全补完计划（三）——package的引入和管理</title>
      <link>http://LonglyCode.github.io/post/emacs%E5%AE%8C%E5%85%A8%E8%A1%A5%E5%AE%8C%E8%AE%A1%E5%88%92-%E4%B8%89/</link>
      <pubDate>Tue, 02 Feb 2016 23:30:39 +0000</pubDate>
      
      <guid>http://LonglyCode.github.io/post/emacs%E5%AE%8C%E5%85%A8%E8%A1%A5%E5%AE%8C%E8%AE%A1%E5%88%92-%E4%B8%89/</guid>
      <description>&lt;!-- toc --&gt;

&lt;h2 id=&#34;package说明&#34;&gt;package说明&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;emacs中package（包）和其他编辑器一样，把一些功能或者特性包装成为一个package。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;package存放在哪里&#34;&gt;package存放在哪里？&lt;/h3&gt;

&lt;p&gt;有package那么肯定需要知道存放在哪里，现在公认有两个稳定的仓库分别是ELPA和MELPA，当然也可以去emacswiki或者github 上直接下载。下面的程序在emacs24以上的版本下有用，将它加入到init.el文件里面去：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;&lt;span class=&#34;c1&#34;&gt;;;内置的package管理，emacs24以上的版本有用&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;require&lt;/span&gt; &lt;span class=&#34;ss&#34;&gt;&amp;#39;package&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;;;将melpa仓库地址加入到package-archives这个列表变量里面&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;add-to-list&lt;/span&gt; &lt;span class=&#34;ss&#34;&gt;&amp;#39;package-archives&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;melpa&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;http://melpa.org/packages/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;;;这个是国内一个elpa仓库镜像，速度更快一些，你懂得&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;add-to-list&lt;/span&gt; &lt;span class=&#34;ss&#34;&gt;&amp;#39;package-archives&lt;/span&gt; 
    &lt;span class=&#34;o&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;popkit&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;http://elpa.popkit.org/packages/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;;;初始化package&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;package-initialize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;;;更新仓库里面的package&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;when&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;package-archive-contents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;package-refresh-contents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>emacs完全补完计划（二）——简单配置和设置</title>
      <link>http://LonglyCode.github.io/post/emacs%E5%AE%8C%E5%85%A8%E8%A1%A5%E5%AE%8C%E8%AE%A1%E5%88%92%E4%BA%8C%E7%AE%80%E5%8D%95%E9%85%8D%E7%BD%AE%E5%92%8C%E8%AE%BE%E7%BD%AE/</link>
      <pubDate>Mon, 01 Feb 2016 23:34:00 +0000</pubDate>
      
      <guid>http://LonglyCode.github.io/post/emacs%E5%AE%8C%E5%85%A8%E8%A1%A5%E5%AE%8C%E8%AE%A1%E5%88%92%E4%BA%8C%E7%AE%80%E5%8D%95%E9%85%8D%E7%BD%AE%E5%92%8C%E8%AE%BE%E7%BD%AE/</guid>
      <description>&lt;!-- toc --&gt;

&lt;h2 id=&#34;我们在谈论lisp的时候谈论什么&#34;&gt;我们在谈论lisp的时候谈论什么？&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;很多emacs教程都想避开Emacs Lisp(下面简称elisp)，完全不可能，反而学习过程中会磕磕碰碰。其实lisp作为一个古老的语言，语法上确实相比现代语言看起来看起来怪异很多，但并不落后，反而有独到之处，简洁易懂。在函数式编程复兴的浪潮中，去了解函数编程的始祖显得意义非凡。之后的内容在配置过程中不断回顾elisp的语法和用法，先提三点：&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>emacs完全补完计划（一）——嘴炮和入门</title>
      <link>http://LonglyCode.github.io/post/emacs%E5%AE%8C%E5%85%A8%E8%A1%A5%E5%AE%8C%E8%AE%A1%E5%88%92-%E4%B8%80-1/</link>
      <pubDate>Thu, 28 Jan 2016 00:25:08 +0000</pubDate>
      
      <guid>http://LonglyCode.github.io/post/emacs%E5%AE%8C%E5%85%A8%E8%A1%A5%E5%AE%8C%E8%AE%A1%E5%88%92-%E4%B8%80-1/</guid>
      <description>&lt;!-- toc --&gt;

&lt;blockquote&gt;
&lt;p&gt;交代一下背景，笔者在接触emacs之前只写过C，只使用过芯片厂商提供的开发环境，没有真正使用过IDE(Integrated Development Environment)，可以说是从零开始接触emacs。当然并不是一时的心血来潮，而是为了成为更好的程序猿，在不断接触linux、VIM、git过程中偶然接触了一门名为Lisp 的语言，其实也不算是偶然，而是买了一本名叫SICP的&amp;rdquo;编程入门书&amp;rdquo;，被Lisp的优(qi)雅(pa)语法深深吸引了，后来又听说emacs是用lisp一种方言作为拓展语言的，禁不住网上各种推销就去学习了被誉为神之编辑器的emacs。真是一步一坑，从此走上了一条不归路&amp;hellip;这一系列文章被称作教程，不如说是个人学习emacs经历总结回顾。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>